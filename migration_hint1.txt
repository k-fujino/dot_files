示された’config/initializers配下のカスタム設定 - 新しいデフォルト値との衝突確認’とは?
アップグレードするとconfig/initializersの下に作った設定ファイルが上書きされるということですか？
新しいデフォルト値がよくわからないので詳しく教えてください
編集

いえ、config/initializers配下のカスタム設定ファイルが上書きされるわけではありません。問題はRailsのデフォルト値が変更されることで、既存のカスタム設定が意図しない動作を引き起こす可能性があることです。

詳しく説明します：
Rails 8.0での主要なデフォルト値変更
Rails 8.0での新しいデフォルト値について

ご質問の答えは「ファイルが上書きされるのではなく、Railsの新しいデフォルト値と既存のカスタム設定が衝突する可能性がある」ということです。
1. config.load_defaultsの仕組み

Rails ップグレード時、config/application.rbの以下の設定：
ruby

# 現在
config.load_defaults 6.0

# アップグレード後
config.load_defaults 8.0

この値を変更すると、Railsの内部的なデフォルト値が一気に変更されます。
2. Rails 8.0の主要なデフォルト値変更例
3. 具体的な問題パターン

例1: セキュリティ設定の変更
ruby

# Rails 6.0のデフォルト
config.force_ssl = false

# Rails 8.0のデフォルト  
config.force_ssl = true  # HTTPSを強制

# あなたのconfig/initializers/custom.rbに以下があった場合
Rails.application.configure do
  config.force_ssl = false  # 開発環境用に意図的に無効化
end

→ Rails 8.0ではload_defaults 8.0により強制的にHTTPSになり、開発環境で問題が発生する可能性

例2: キャッシュ形式の変更
ruby

# Rails 6.0
config.active_support.cache_format_version = 6.1

# Rails 8.0  
config.active_support.cache_format_version = 7.1

→ キャッシュが無になり、パフォーマンスに影響

例3: データベース設定の変更
ruby

# Rails 8.0での新しいデフォルト
# db:migrateが新しいスキーマを先に読み込む動作に変更

4. new_framework_defaults_8_0.rbファイルとは

Rails アップグレード時にrails app:updateを実行すると、以下のようなファイルが作成されます：
ruby

# config/initializers/new_framework_defaults_8_0.rb
# 
# Rails 8.0の新しいデフォルト設定（コメントアウト状態）

# Enable authentication generator
# Rails.application.config.generators.authentication = true

# Enable new Solid adapters by default
# Rails.application.config.solid_queue = true
# Rails.application.config.solid_cache = true  
# Rails.application.config.solid_cable = true

# Set Regexp.timeout to 1 second by default
# Regexp.timeout = 1

# など...

5. 安全な移行手順

    rails app:update実行

bash

rails app:update

新しいデフォルト設定を1つずつ確認
ruby

# new_framework_defaults_8_0.rbで1行ずつコメントアウト解除
Rails.application.config.generators.authentication = true

各設定でテスト実行
bash

rails test
rails server  # 動作確認

問題があれば個別に対応
ruby

# config/application.rb で個別に上書き
config.load_defaults 8.0
config.force_ssl = false  # 開発環境では無効にしたい場合

すべて確認後にファイル削除

    bash

    rm config/initializers/new_framework_defaults_8_0.rb

6. あなたの既存設定への影響

ruby

# config/application.rb
config.load_defaults 8.0  # この行で多くのデフォルト値が変更される

# config/initializers/custom.rb  
Rails.application.configure do
  # ここの設定が新しいデフォルトと矛盾していないか要確認
end

つまり、ファイルの上書きではなく、設定値の優先順位と互換性の問題が起こる可能性があるということです。そのため、段階的な確認が重要になります。

